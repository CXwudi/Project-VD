<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>mikufan.cx</groupId>
  <artifactId>project-vd</artifactId>
  <packaging>pom</packaging> <!-- in intellij "pom" won't let this module contains source code, IDEA-221071 -->
  <version>4.0.0-SNAPSHOT</version>

  <prerequisites>
    <maven>3.5.0</maven> <!-- not required but better to add this, good for updating and solving maven problems-->
  </prerequisites>
  <modules>
    <module>../components/vocadb-pv-task-producer</module>
    <module>../commons/project-vd-common-util</module>
    <module>../components/vocadb-pv-downloader</module>
    <module>../commons/project-vd-common-entity</module>
    <module>../package-all</module>
  </modules>

  <name>Project VD - Video Downloader for Vocal Characters</name>
  <description>
    Project VD - Video Downloader for Vocal Characters
    the remastered Niconico Video Downloader to support more sites and more features.
  </description>
  <url>https://github.com/CXwudi/Project-VD</url>

  <contributors>
    <contributor>
      <name>CXwudi</name>
      <roles>
        <role>Project manager</role>
        <role>Main developer</role>
        <role>初音ミクのfan</role>
        <role>ボカロのfan</role>
      </roles>
      <email>charleschen0502@gmail.com</email>
    </contributor>
    <contributor>
      <name>初音ミク</name>
      <roles>
        <role>Singer</role>
        <role>Energy provider</role>
      </roles>
      <organizationUrl>https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x</organizationUrl>
    </contributor>
  </contributors>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>11</java.version>
    <!-- variables for ci/cd -->
    <build.library.dir>libs</build.library.dir>
    <!-- some shared version numbers -->
    <module.version>4.0.0-SNAPSHOT</module.version>  <!-- stay same with project version, but don't replace project version tag in pom-->
    <log4j.version>2.13.3</log4j.version>
    <eclipse-collections.version>10.2.0</eclipse-collections.version>
    <jackson.version>2.11.1</jackson.version>

  </properties>

  <repositories>
    <!-- for helping me releasing maven package of common-vocaloid-java-->
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencyManagement> <!-- declare dependencies that is useful in this project -->
    <dependencies>
      <!-- my internal children for use -->
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>project-vd-common-util</artifactId>
        <version>${module.version}</version>
      </dependency>
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>project-vd-common-entity</artifactId>
        <version>${module.version}</version>
      </dependency>

      <!-- all my application components, declared here for packaging proposes -->
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>vocadb-pv-task-producer</artifactId>
        <version>${module.version}</version>
      </dependency>
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>vocadb-pv-downloader</artifactId>
        <version>${module.version}</version>
      </dependency>

      <!-- my other libraries -->
      <dependency><!-- my common modules from another repo -->
        <groupId>com.github.CXwudi.common-vocaloid-java</groupId>
        <artifactId>common-vocaloid-import-all</artifactId>
        <version>1.0.9</version>
      </dependency>
      <dependency><!-- the modified youtube-dl wrapper -->
        <groupId>com.github.CXwudi</groupId>
        <artifactId>youtubedl-java</artifactId>
        <version>1.2.RC6</version>
      </dependency>


      <!-- honor utils -->
      <!-- for both guava and common-lang, only use it if Java own util lack of it -->
      <dependency> <!-- guava, provides useful utils -->
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>29.0-jre</version>
      </dependency>
      <dependency> <!-- common-lang, provides useful utils as well -->
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.11</version>
      </dependency>

      <!-- application framework -->
      <dependency> <!-- http-client5 -->
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>5.0.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency> <!-- JAVE2 (Java Audio Video Encoder) library -->
        <groupId>ws.schild</groupId>
        <artifactId>jave-all-deps</artifactId>
        <version>2.7.3</version>
      </dependency>

      <dependency> <!-- jackson -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and its standalone annotation, children import this to avoid jackson-databind -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and its standalone object mapper -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and supports for eclipse collection -->
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-eclipse-collections</artifactId>
        <version>${jackson.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency> <!-- and support for yaml -->
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and support for using all arg constructor without any jackson annotation -->
        <groupId>com.fasterxml.jackson.module</groupId>
        <artifactId>jackson-module-parameter-names</artifactId>
        <version>${jackson.version}</version>
      </dependency>
<!--      enable them if needed -->
<!--      <dependency> &lt;!&ndash; and supports for java 8 Data api&ndash;&gt;-->
<!--        <groupId>com.fasterxml.jackson.datatype</groupId>-->
<!--        <artifactId>jackson-datatype-jsr310</artifactId>-->
<!--        <version>${jackson.version}</version>-->
<!--      </dependency>-->
<!--      <dependency> &lt;!&ndash; and supports for java 8 Optional type&ndash;&gt;-->
<!--        <groupId>com.fasterxml.jackson.datatype</groupId>-->
<!--        <artifactId>jackson-datatype-jdk8</artifactId>-->
<!--        <version>${jackson.version}</version>-->
<!--      </dependency>-->

      <!-- logging -->
      <dependency> <!-- slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.30</version>
      </dependency>
      <dependency> <!-- log4j2 -->
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
        <exclusions> <!-- exclude the included slf4j, which uses older version -->
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency> <!-- async logging support-->
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>3.4.2</version>
      </dependency>
      <dependency>
        <groupId>org.fusesource.jansi</groupId>
        <artifactId>jansi</artifactId>
        <version>1.18</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies> <!-- enabled by default dependencies that are shared across the whole project -->
    <!-- current enabled dep: junit, lombok, eclipse-collection -->
    <!-- test cases -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>

    <!-- injecting cheat -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.12</version>
      <scope>provided</scope>
    </dependency>

    <!-- honor utils -->
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections-api</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
      <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
      <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
      <!-- by default, all maven self-owned plugins in pluginManagement are enabled -->
      <plugins>

        <plugin> <!-- only need this to compiling high version java like 11 or higher -->
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version> <!-- higher version support higher java -->
          <configuration>
            <release>${java.version}</release>
            <compilerArgs>
              <arg>-parameters</arg> <!-- allow using jackson without annotation, even for subclasses -->
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin> <!-- run junit test-->
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>

        <plugin> <!-- make sure maven produce jar file for each components -->
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <archive>
              <manifest>
                <!-- children copy all these setting, and finish the mainClass -->
                <!-- base on the package-all assembly zip.xml configuration,
                 all modules dependencies will be found in the same directory,
                 and the class path naming should be custom,
                 which need to stay same with zip.xml in assembly plugin -->
                <addClasspath>true</addClasspath>
                <classpathLayoutType>custom</classpathLayoutType>
                <!--suppress UnresolvedMavenProperty -->
                <customClasspathLayout>$${artifact.artifactId}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout>
                <!-- children plz indicate your main class -->
                <!-- <mainClass>com.sample.Main</mainClass> -->
              </manifest>
            </archive>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

</project>