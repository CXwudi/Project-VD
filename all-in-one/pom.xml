<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.3.RELEASE</version>
    <relativePath/> <!-- lookup parent from repository -->
  </parent>
  <groupId>mikufan.cx</groupId>
  <artifactId>project-vd</artifactId>
  <packaging>pom</packaging> <!-- in intellij "pom" won't let this module contains source code, IDEA-221071 -->
  <version>4.0.0-SNAPSHOT</version>

  <prerequisites>
    <maven>3.5.0</maven> <!-- not required but better to add this, good for updating and solving maven problems-->
  </prerequisites>
  <modules>
    <module>../components/vocadb-pv-task-producer</module>
    <module>../commons/project-vd-common-util</module>
    <module>../components/vocadb-pv-downloader</module>
    <module>../commons/project-vd-common-entity</module>
    <module>../package-all</module>
  </modules>

  <name>Project VD - Video Downloader for Vocal Characters</name>
  <description>
    Project VD - Video Downloader for Vocal Characters
    the remastered Niconico Video Downloader to support more sites and more features.
  </description>
  <url>https://github.com/CXwudi/Project-VD</url>

  <contributors>
    <contributor>
      <name>CXwudi</name>
      <roles>
        <role>Project manager</role>
        <role>Main developer</role>
        <role>初音ミクのfan</role>
        <role>ボカロのfan</role>
      </roles>
      <email>charleschen0502@gmail.com</email>
    </contributor>
    <contributor>
      <name>初音ミク</name>
      <roles>
        <role>Singer</role>
        <role>Energy provider</role>
      </roles>
      <organizationUrl>https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x</organizationUrl>
    </contributor>
  </contributors>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>11</java.version>
    <!-- variables for ci/cd -->
    <build.library.dir>libs</build.library.dir>
    <!-- some shared version numbers -->
    <module.version>4.0.0-SNAPSHOT</module.version>  <!-- stay same with project version, but don't replace project version tag in pom-->
    <eclipse-collections.version>10.4.0</eclipse-collections.version>

  </properties>

  <repositories>
    <!-- for helping me releasing maven package of common-vocaloid-java-->
    <repository>
      <id>jitpack.io</id>
      <url>https://jitpack.io</url>
    </repository>
  </repositories>

  <dependencyManagement> <!-- declare dependencies that is useful in this project -->
    <dependencies>
      <!-- my internal children for use -->
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>project-vd-common-util</artifactId>
        <version>${module.version}</version>
      </dependency>
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>project-vd-common-entity</artifactId>
        <version>${module.version}</version>
      </dependency>

      <!-- my other libraries -->
      <dependency><!-- my common modules from another repo -->
        <groupId>com.github.CXwudi.common-vocaloid-java</groupId>
        <artifactId>common-vocaloid-import-all</artifactId>
        <version>1.0.9</version>
        <exclusions> <!-- we make sure we use project-vd's declared version -->
          <exclusion>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency><!-- the modified youtube-dl wrapper -->
        <groupId>com.github.CXwudi</groupId>
        <artifactId>youtubedl-java</artifactId>
        <version>1.2.RC6</version>
      </dependency>


      <!-- honor utils -->
      <!-- for both guava and common-lang, only use it if Java own util lack of it -->
      <dependency> <!-- guava, provides useful utils -->
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>29.0-jre</version>
      </dependency>

      <!-- application framework -->
      <dependency> <!-- http-client5 -->
        <groupId>org.apache.httpcomponents.client5</groupId>
        <artifactId>httpclient5</artifactId>
        <version>5.0.1</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>commons-cli</groupId>
        <artifactId>commons-cli</artifactId>
        <version>1.4</version>
      </dependency>
      <dependency> <!-- JAVE2 (Java Audio Video Encoder) library -->
        <groupId>ws.schild</groupId>
        <artifactId>jave-all-deps</artifactId>
        <version>2.7.3</version>
      </dependency>
      <dependency> <!-- eclipse-coll jackson support -->
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-eclipse-collections</artifactId>
        <version>${jackson-bom.version}</version>
        <exclusions> <!-- to exclude the embedded eclipse collection which is old -->
          <exclusion>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- logging -->
      <dependency> <!-- support for async logging -->
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>3.4.2</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <dependencies> <!-- enabled by default dependencies that are shared across the whole project -->
    <!-- current enabled dep:
    spring-boot-starter (without default logging),
    spring-boot-start-test (junit + mockito),
    lombok,
    eclipse-collection
    -->

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- test cases -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- injecting cheat -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <!-- honor utils -->
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections-api</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.collections</groupId>
      <artifactId>eclipse-collections</artifactId>
      <version>${eclipse-collections.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
      <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
      <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
      <!-- by default, all maven self-owned plugins in pluginManagement are enabled -->
      <plugins>

        <plugin> <!-- only need this to compiling high version java like 11 or higher -->
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version> <!-- higher version support higher java -->
          <configuration>
            <release>${java.version}</release>
            <compilerArgs>
              <!-- <arg>-parameters</arg> allow using jackson without annotation, even for subclasses -->
            </compilerArgs>
          </configuration>
        </plugin>

        <plugin> <!-- run junit test-->
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>

        <plugin> <!-- make sure maven produce jar file for each components -->
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.2.0</version>
          <configuration>
            <archive>
              <manifest>
                <!-- children copy all these setting, and finish the mainClass -->
                <!-- base on the package-all assembly zip.xml configuration,
                 all modules dependencies will be found in the same directory,
                 and the class path naming should be custom,
                 which need to stay same with zip.xml in assembly plugin -->
                <addClasspath>true</addClasspath>
                <classpathLayoutType>custom</classpathLayoutType>
                <!--suppress UnresolvedMavenProperty -->
                <customClasspathLayout>$${artifact.artifactId}$${dashClassifier?}.$${artifact.extension}</customClasspathLayout>
                <!-- children plz indicate your main class -->
                <!-- <mainClass>com.sample.Main</mainClass> -->
              </manifest>
            </archive>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

</project>